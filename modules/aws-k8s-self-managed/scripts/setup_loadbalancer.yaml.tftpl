#cloud-config

hostname: ${hostname}

package_update: true
packages:
  - haproxy

write_files:
  - path: /etc/haproxy/haproxy.cfg
    owner: haproxy:haproxy
    permissions: "0644"
    append: true
    defer: true
    content: |
      frontend kube-apiserver
        bind *:${apiserver_port}
        mode tcp
        option tcplog
        default_backend kube-apiserver
      backend kube-apiserver
        mode tcp
        option tcp-check
        balance roundrobin
        %{ for index, node_ip in master_nodes_ips ~}
        server k8s-master-${index} ${node_ip}:${apiserver_port} check fall 3 rise 2
        %{ endfor ~}
      %{ if install_ingress_controller }
      frontend ingress-controller-http
        bind *:80
        mode tcp
        option tcplog
        default_backend ingress-controller-http
      backend ingress-controller-http
        mode tcp
        option tcp-check
        balance roundrobin
        %{ for index, node_ip in cluster_nodes_ips ~}
        server k8s-node-${index} ${node_ip}:${ingress_http_nodePort} check fall 3 rise 2
        %{ endfor ~}
      frontend ingress-controller-https
        bind *:443
        mode tcp
        option tcplog
        default_backend ingress-controller-https
      backend ingress-controller-https
        mode tcp
        option tcp-check
        balance roundrobin
        %{ for index, node_ip in cluster_nodes_ips ~}
        server k8s-node-${index} ${node_ip}:${ingress_https_nodePort} check fall 3 rise 2
        %{ endfor ~}
      %{ endif }

runcmd:
  - systemctl daemon-reload
  - systemctl enable haproxy
  - systemctl restart haproxy

final_message: "The system is finally up, after $UPTIME seconds"
