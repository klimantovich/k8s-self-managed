#cloud-config

package_update: true
package_upgrade: true
packages:
  - awscli
  - jq
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg2
  - openssl
  - software-properties-common
  - gpg

write_files:
  - path: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter
    append: true
  - path: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
    append: true
  - path: /tmp/wait_for_secrets.sh
    permissions: 0755
    content: |
      #!/bin/bash
      TOKEN=$(aws secretsmanager get-secret-value --secret-id ${kubeadm_token_secret_name} | jq -r .SecretString | tr -s '\n')
      CA_HASH=$(aws secretsmanager get-secret-value --secret-id ${kubeadm_ca_hash_secret_name} | jq -r .SecretString | tr -s '\n')
      while [[ -z $TOKEN || $TOKEN == ${secret_placeholder} ]] && [[ -z $CA_HASH || $CA_HASH == ${secret_placeholder} ]]
      do
        echo "Waiting the Certificate Key..."
        TOKEN=$(aws secretsmanager get-secret-value --secret-id ${kubeadm_token_secret_name} | jq -r .SecretString | tr -s '\n')
        CA_HASH=$(aws secretsmanager get-secret-value --secret-id ${kubeadm_ca_hash_secret_name} | jq -r .SecretString | tr -s '\n')
        sleep 10
      done

runcmd:
  - swapoff -a
  - sed -i '/swap/d' /etc/fstab
  - mount -a
  - ufw disable
  - modprobe overlay
  - modprobe br_netfilter
  - sysctl --system
  # Install Container Runtime (CRI-O)
  - export OS=xUbuntu_22.04
  - echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /"| sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
  - echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/${crio_version}/$OS/ /"|sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:${crio_version}.list
  - curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:${crio_version}/$OS/Release.key | sudo apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers.gpg add -
  - curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | sudo apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers.gpg add -
  - apt-get update
  - apt-get install -y cri-o cri-o-runc cri-tools
  - systemctl daemon-reload
  - systemctl start crio
  - systemctl enable crio
  # Install Kubernetes Tools
  - curl -fsSL https://pkgs.k8s.io/core:/stable:/v${kubernetes_version}/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  - echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v${kubernetes_version}/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
  - apt-get update
  - apt-get install -y kubelet kubeadm kubectl
  - apt-mark hold kubelet kubeadm kubectl
  - systemctl enable --now kubelet
  # Wait for Cluster secrets
  - export AWS_DEFAULT_REGION=${aws_default_region}
  - /tmp/wait_for_secrets.sh
  - export TOKEN=$(aws secretsmanager get-secret-value --secret-id ${kubeadm_token_secret_name} | jq -r .SecretString | tr -s '\n')
  - export CA_HASH=$(aws secretsmanager get-secret-value --secret-id ${kubeadm_ca_hash_secret_name} | jq -r .SecretString | tr -s '\n')
  # Kubeadm join
  - kubeadm join ${control_plane_endpoint}:${apiserver_port} --token $TOKEN --discovery-token-ca-cert-hash sha256:$CA_HASH
